'predStarts2HoursPriorB' =
'Starts, baseline, 2 hours prior',
'predEnds1HourPriorB' =
'Ends, baseline, 1 hour prior',
'predEnds2HoursPriorB' =
'Ends, baseline, 2 hours prior')) %>%
mutate(model = factor(model,
levels = c('Starts, 1 hour prior',
'Starts, baseline, 1 hour prior',
'Starts, 2 hours prior',
'Starts, baseline, 2 hours prior',
'Ends, 1 hour prior',
'Ends, baseline, 1 hour prior',
'Ends, 2 hours prior',
'Ends, baseline, 2 hours prior'))) %>%
ggplot(aes(model, MAE)) +
geom_bar(aes(fill = week), position = 'dodge', stat = 'identity') +
scale_fill_manual(values = c(color2, color3),
name = 'Week') +
plotTheme2() +
theme(axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1))
predictionInfo %>%
dplyr::select(week, model, MAE) %>%
mutate(week = as.character(week))%>%
mutate(model =
recode(model,
'predStarts1HourPrior' =
'Starts, 1 hour prior',
'predStarts2HoursPrior' =
'Starts, 2 hours prior',
'predEnds1HourPrior' =
'Ends, 1 hour prior',
'predEnds2HoursPrior' =
'Ends, 2 hours prior',
'predStarts1HourPriorB' =
'Starts, baseline, 1 hour prior',
'predStarts2HoursPriorB' =
'Starts, baseline, 2 hours prior',
'predEnds1HourPriorB' =
'Ends, baseline, 1 hour prior',
'predEnds2HoursPriorB' =
'Ends, baseline, 2 hours prior')) %>%
mutate(model = factor(model,
levels = c('Starts, 1 hour prior',
'Starts, baseline, 1 hour prior',
'Starts, 2 hours prior',
'Starts, baseline, 2 hours prior',
'Ends, 1 hour prior',
'Ends, baseline, 1 hour prior',
'Ends, 2 hours prior',
'Ends, baseline, 2 hours prior'))) %>%
ggplot(aes(model, MAE)) +
geom_bar(aes(fill = week), position = 'dodge', stat = 'identity') +
scale_fill_manual(values = c(color2, color3),
name = 'Week') +
plotTheme2() +
theme(axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1))
predictionInfo %>%
mutate(hour = map(data, pull, hour)) %>%
dplyr::select(hour, model, observation, prediction) %>%
unnest() %>%
gather(variable, value, -hour, -model) %>%
group_by(model, variable, hour) %>%
summarize(value = mean(value, na.rm = T)) %>%
mutate(model =
recode(model,
'predStarts1HourPrior' =
'Starts, 1 hour prior',
'predStarts2HoursPrior' =
'Starts, 2 hours prior',
'predEnds1HourPrior' =
'Ends, 1 hour prior',
'predEnds2HoursPrior' =
'Ends, 2 hours prior',
'predStarts1HourPriorB' =
'Starts, baseline, 1 hour prior',
'predStarts2HoursPriorB' =
'Starts, baseline, 2 hours prior',
'predEnds1HourPriorB' =
'Ends, baseline, 1 hour prior',
'predEnds2HoursPriorB' =
'Ends, baseline, 2 hours prior')) %>%
mutate(model = factor(model,
levels = c('Starts, 1 hour prior',
'Starts, baseline, 1 hour prior',
'Starts, 2 hours prior',
'Starts, baseline, 2 hours prior',
'Ends, 1 hour prior',
'Ends, baseline, 1 hour prior',
'Ends, 2 hours prior',
'Ends, baseline, 2 hours prior'))) %>%
ggplot(aes(hour, value, color = variable)) +
geom_line(size = .8) +
facet_wrap(~model, ncol = 1) +
scale_color_manual(values = c(color3, color2),
name = '',
labels = c('Observation', 'Prediction')) +
labs(title = 'Mean observed/predicted trip starts/ends by hourly interval',
x = 'Hour', y = 'Starts/Ends') +
plotTheme2()
predictionInfo %>%
mutate(hour = map(data, pull, hour)) %>%
dplyr::select(hour, model, observation, prediction) %>%
unnest() %>%
gather(variable, value, -hour, -model) %>%
group_by(model, variable, hour) %>%
summarize(value = mean(value, na.rm = T)) %>%
mutate(model =
recode(model,
'predStarts1HourPrior' =
'Starts, 1 hour prior',
'predStarts2HoursPrior' =
'Starts, 2 hours prior',
'predEnds1HourPrior' =
'Ends, 1 hour prior',
'predEnds2HoursPrior' =
'Ends, 2 hours prior',
'predStarts1HourPriorB' =
'Starts, baseline, 1 hour prior',
'predStarts2HoursPriorB' =
'Starts, baseline, 2 hours prior',
'predEnds1HourPriorB' =
'Ends, baseline, 1 hour prior',
'predEnds2HoursPriorB' =
'Ends, baseline, 2 hours prior')) %>%
mutate(model = factor(model,
levels = c('Starts, 1 hour prior',
'Starts, baseline, 1 hour prior',
'Starts, 2 hours prior',
'Starts, baseline, 2 hours prior',
'Ends, 1 hour prior',
'Ends, baseline, 1 hour prior',
'Ends, 2 hours prior',
'Ends, baseline, 2 hours prior'))) %>%
ggplot(aes(hour, value, color = variable)) +
geom_line(size = .8) +
facet_wrap(~model, ncol = 2) +
scale_color_manual(values = c(color3, color2),
name = '',
labels = c('Observation', 'Prediction')) +
labs(title = 'Mean observed/predicted trip starts/ends by hourly interval',
x = 'Hour', y = 'Starts/Ends') +
plotTheme2()
predictionInfo %>%
dplyr::select(week, model, MAE) %>%
mutate(week = as.character(week))%>%
mutate(model =
recode(model,
'predStarts1HourPrior' =
'Starts, 1 hour prior',
'predStarts2HoursPrior' =
'Starts, 2 hours prior',
'predEnds1HourPrior' =
'Ends, 1 hour prior',
'predEnds2HoursPrior' =
'Ends, 2 hours prior',
'predStarts1HourPriorB' =
'Starts, baseline, 1 hour prior',
'predStarts2HoursPriorB' =
'Starts, baseline, 2 hours prior',
'predEnds1HourPriorB' =
'Ends, baseline, 1 hour prior',
'predEnds2HoursPriorB' =
'Ends, baseline, 2 hours prior')) %>%
mutate(model = factor(model,
levels = c('Starts, 1 hour prior',
'Starts, baseline, 1 hour prior',
'Starts, 2 hours prior',
'Starts, baseline, 2 hours prior',
'Ends, 1 hour prior',
'Ends, baseline, 1 hour prior',
'Ends, 2 hours prior',
'Ends, baseline, 2 hours prior'))) %>%
ggplot(aes(model, MAE)) +
geom_bar(aes(fill = week), position = 'dodge', stat = 'identity') +
scale_fill_manual(values = c(color2, color3),
name = 'Week') +
plotTheme2() +
theme(axis.text.x = element_text(angle = 45, size = 7.5, vjust = 1, hjust = 1))
predictionInfo %>%
dplyr::select(week, model, MAE) %>%
mutate(week = as.character(week))%>%
mutate(model =
recode(model,
'predStarts1HourPrior' =
'Starts, 1 hour prior',
'predStarts2HoursPrior' =
'Starts, 2 hours prior',
'predEnds1HourPrior' =
'Ends, 1 hour prior',
'predEnds2HoursPrior' =
'Ends, 2 hours prior',
'predStarts1HourPriorB' =
'Starts, baseline, 1 hour prior',
'predStarts2HoursPriorB' =
'Starts, baseline, 2 hours prior',
'predEnds1HourPriorB' =
'Ends, baseline, 1 hour prior',
'predEnds2HoursPriorB' =
'Ends, baseline, 2 hours prior')) %>%
mutate(model = factor(model,
levels = c('Starts, 1 hour prior',
'Starts, baseline, 1 hour prior',
'Starts, 2 hours prior',
'Starts, baseline, 2 hours prior',
'Ends, 1 hour prior',
'Ends, baseline, 1 hour prior',
'Ends, 2 hours prior',
'Ends, baseline, 2 hours prior'))) %>%
ggplot(aes(model, MAE)) +
geom_bar(aes(fill = week), position = 'dodge', stat = 'identity') +
scale_fill_manual(values = c(color2, color3),
name = 'Week') +
labs(title = 'Mean absolute error by model and week',
x = 'Model', y = 'MAE') +
plotTheme2() +
theme(axis.text.x = element_text(angle = 45, size = 7.5, vjust = 1, hjust = 1))
rm(regStart1B, regStart2B)
gc()
rm(citibikeRaw)
gc()
ggplot(aggByTime) +
geom_line(aes(hour, Trips, color = legend)) +
scale_color_manual(values = c(color2, color3), name = '') +
geom_vline(data = mondays, aes(xintercept = monday)) +
labs(title = 'Bike-share trips by time', x = 'Date') +
plotTheme2() +
theme(panel.grid.major = element_blank())
write.csv(aggByTime, 'aggByTime.csv')
aggByTime = read.csv('aggByTime.csv')
rm(aggByStart, aggByEnd, aggByStart2)
rm(ridePanel)
gc()
rm(weather, rideWeatherPanel)
rm(rideWeatherInfoPanel, nyTracts, nyBlocks, nyWAC, nyRAC)
gc()
startsLag =
finalPanel %>% st_drop_geometry() %>%
dplyr::select(starts_with('starts')) %>%
gather(variable, value, -starts) %>%
mutate(variable = recode(variable,
'startsLag1Hour' = '1 Hour',
'startsLag2Hours' = '2 Hours',
'startsLag3Hours' = '3 Hours',
'startsLag4Hours' = '4 Hours',
'startsLag12Hours' = '12 Hours',
'startsLag1Day' = '1 Day'))%>%
mutate(variable = factor(variable,
levels = c('1 Hour', '2 Hours',
'3 Hours', '4 Hours',
'12 Hours', '1 Day')))
startsLagCorr =
startsLag %>%
group_by(variable) %>%
summarize(correlation = round(cor(value, starts, use = 'complete.obs'), 2))
startsLagCorrPlot = ggplot(sample_n(startsLag, 5000), aes(value, starts)) +
geom_point(size = .001) +
geom_smooth(method = 'lm', se = F, color = color2) +
geom_text(data = startsLagCorr, aes(label = paste('r =', correlation)),
x = -Inf, y = Inf, vjust = 1.5, hjust = -.1, size = 3) +
facet_wrap(~variable, ncol = 6) +
labs(title = 'Trip starts as a function of time lags', x = 'Lag trip starts',
y = 'Trip starts') +
plotTheme2()
endsLag =
finalPanel %>% st_drop_geometry() %>%
dplyr::select(starts_with('ends')) %>%
gather(variable, value, -ends) %>%
mutate(variable = recode(variable,
'endsLag1Hour' = '1 Hour',
'endsLag2Hours' = '2 Hours',
'endsLag3Hours' = '3 Hours',
'endsLag4Hours' = '4 Hours',
'endsLag12Hours' = '12 Hours',
'endsLag1Day' = '1 Day'))%>%
mutate(variable = factor(variable,
levels = c('1 Hour', '2 Hours',
'3 Hours', '4 Hours',
'12 Hours', '1 Day')))
endsLagCorr =
endsLag %>%
group_by(variable) %>%
summarize(correlation = round(cor(value, ends, use = 'complete.obs'), 2))
endsLagCorrPlot = ggplot(sample_n(endsLag, 5000), aes(value, ends)) +
geom_point(size = .001) +
geom_smooth(method = 'lm', se = F, color = color2) +
geom_text(data = endsLagCorr, aes(label = paste('r =', correlation)),
x = -Inf, y = Inf, vjust = 1.5, hjust = -.1, size = 3) +
facet_wrap(~variable, ncol = 6) +
labs(title = 'Trip ends as a function of time lags', x = 'Lag trip ends',
y = 'Trip ends') +
plotTheme2()
grid.arrange(startsLagCorrPlot, endsLagCorrPlot, ncol = 1)
st_write(aggByWeek, 'aggByWeek.GeoJson', crs = crs)
aggByWeek = st_read('aggByWeek.GeoJson', crs = crs)
ggplot() +
geom_sf(data = nyBoundaries,
color = 'grey', fill = 'grey90', size = .03) +
geom_sf(data = aggByWeek, aes(alpha = value), color = color2, size = .003) +
scale_alpha_continuous(range = c(0, 1), name = '') +
facet_grid(variable ~ week) +
coord_sf(xlim = c(4943223, 4992928), ylim = c(1772135, 1869228), expand = T) +
plotTheme2() +
theme(panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.text.y = element_blank())
ggplot() +
geom_sf(data = nyBoundaries,
color = 'grey', fill = 'grey90', size = .03) +
geom_sf(data = aggByWeek, aes(color = value), size = .003) +
scale_color_gradient(high = color2, low = color3, name = '') +
facet_grid(variable ~ week) +
coord_sf(xlim = c(4943223, 4992928), ylim = c(1772135, 1869228), expand = T) +
plotTheme2() +
theme(panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.text.y = element_blank())
ggplot() +
geom_sf(data = nyBoundaries,
color = 'grey', fill = 'grey90', size = .03) +
geom_sf(data = aggByDayofWeek, aes(color = value), size = .003) +
scale_color_gradient(high = color2, low = color3, name = '') +
facet_grid(variable ~ dayOfWeek) +
coord_sf(xlim = c(4943223, 4992928), ylim = c(1772135, 1869228), expand = T) +
plotTheme2() +
theme(panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.text.y = element_blank())
st_write(aggByDayofWeek, 'aggByDayofWeek.GeoJson', crs = crs)
aggByDayofWeek = st_read('aggByDayofWeek.GeoJson', crs = crs)
animation =
ggplot() +
geom_sf(data = nyBoundaries,
color = 'grey', fill = 'grey90', size = .03) +
geom_sf(data = subPanel, aes(color = value), size = .003) +
scale_color_gradient(high = color2, low = color3, name = '')+
coord_sf(xlim = c(4943223, 4992928), ylim = c(1772135, 1869228), expand = T) +
facet_wrap(~variable) +
labs(title = 'Trips starts and ends for one day in Oct 2021',
subtitle = '1 hour intervals: {current_frame}') +
transition_manual(hour) +
plotTheme2() +
theme(panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.text.y = element_blank())
anim_save('animation.gif',
animation, duration = 10, renderer = gifski_renderer())
knitr::include_graphics("animation.gif", )
View(subPanel)
ggplot(subPanel)+
geom_histogram(aes(value))
subPanel = finalPanel %>%
filter(., week == 42 & dayOfWeek == 'Mon') %>%
dplyr::select(hour, station, starts, ends, geometry) %>%
gather(variable, value, -hour, -station, -geometry) %>%
mutate(number = case_when(value == 0 ~ '0 start/end',
value > 0 & value <= 5 ~ '1~5 starts/ends',
value > 5 & value <= 10 ~ '6~10 starts/ends',
value > 10 & value <= 25 ~ '11~25 starts/ends',
value > 25 ~ '26+ starts/ends')) %>%
mutate(variable = recode(variable, 'starts' = 'Starts', 'ends' = 'Ends')) %>%
mutate(variable = factor(variable,
levels = c('Starts', 'Ends')))
subPanel = finalPanel %>%
filter(., week == 42 & dayOfWeek == 'Mon') %>%
dplyr::select(hour, station, starts, ends, geometry) %>%
gather(variable, value, -hour, -station, -geometry) %>%
mutate(number = case_when(value == 0 ~ '0 start/end',
value > 0 & value <= 5 ~ '1~5 starts/ends',
value > 5 & value <= 10 ~ '6~10 starts/ends',
value > 10 & value <= 25 ~ '11~25 starts/ends',
TRUE ~ '26+ starts/ends')) %>%
mutate(number = fct_relevel(number,
'0 start/end',
'1~5 starts/ends',
'6~10 starts/ends',
'11~25 starts/ends',
'26+ starts/ends')) %>%
mutate(variable = recode(variable, 'starts' = 'Starts', 'ends' = 'Ends')) %>%
mutate(variable = factor(variable,
levels = c('Starts', 'Ends')))
animation =
ggplot() +
geom_sf(data = nyBoundaries,
color = 'grey', fill = 'grey90', size = .03) +
geom_sf(data = subPanel, aes(color = number), size = .03) +
scale_color_manual(values = c('grey90', color3, '#64C1C9', '#FEC676', color2),
name = '')+
coord_sf(xlim = c(4943223, 4992928), ylim = c(1772135, 1869228), expand = T) +
facet_wrap(~variable) +
labs(title = 'Trips starts and ends for one day in Oct 2021',
subtitle = '1 hour intervals: {current_frame}') +
transition_manual(hour) +
plotTheme2() +
theme(panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.text.y = element_blank())
anim_save('animation.gif',
animation, duration = 10, renderer = gifski_renderer())
knitr::include_graphics("animation.gif", )
animation =
ggplot() +
geom_sf(data = nyBoundaries,
color = 'grey', fill = 'grey90', size = .03) +
geom_sf(data = subPanel, aes(color = number), size = .03) +
scale_color_manual(values = c('grey90', color3, '#8AB8E2', '#FAB2AA', color2),
name = '')+
coord_sf(xlim = c(4943223, 4992928), ylim = c(1772135, 1869228), expand = T) +
facet_wrap(~variable) +
labs(title = 'Trips starts and ends for one day in Oct 2021',
subtitle = '1 hour intervals: {current_frame}') +
transition_manual(hour) +
plotTheme2() +
theme(panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.text.y = element_blank())
anim_save('animation.gif',
animation, duration = 10, renderer = gifski_renderer())
animation =
ggplot() +
geom_sf(data = nyBoundaries,
color = 'grey', fill = 'grey90', size = .03) +
geom_sf(data = subPanel, aes(color = number), size = .03) +
scale_color_manual(values = c('grey90', color3, '#8AB8E2', '#FAB2AA', color2),
name = '')+
coord_sf(xlim = c(4943223, 4992928), ylim = c(1772135, 1869228), expand = T) +
facet_wrap(~variable) +
labs(title = 'Trips starts and ends for one day in Oct 2021',
subtitle = '1 hour intervals: {current_frame}') +
transition_manual(hour) +
plotTheme2() +
theme(panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.text.y = element_blank())
anim_save('bikeAnimation.gif',
animation, duration = 10, renderer = gifski_renderer())
knitr::include_graphics("bikeAnimation.gif")
rm(subPanel)
gc()
ggplot(aggByTime) +
geom_line(aes(hour, Trips, color = legend)) +
scale_color_manual(values = c(color2, color3), name = '') +
geom_vline(data = mondays, aes(xintercept = monday)) +
labs(title = 'Bike-share trips by time', x = 'Date') +
plotTheme2() +
theme(panel.grid.major = element_blank())
aggByTime = rbind(
bikeTrain %>% mutate(legend = 'Training'),
bikeTest %>% mutate(legend = 'Testing')) %>%
st_drop_geometry() %>%
group_by(legend, hour) %>%
summarize(Trips = sum(starts)) %>%
ungroup()
ggplot(aggByTime) +
geom_line(aes(hour, Trips, color = legend)) +
scale_color_manual(values = c(color2, color3), name = '') +
geom_vline(data = mondays, aes(xintercept = monday)) +
labs(title = 'Bike-share trips by time', x = 'Date') +
plotTheme2() +
theme(panel.grid.major = element_blank())
animation =
ggplot() +
geom_sf(data = nyBoundaries,
color = 'grey', fill = 'grey90', size = .03) +
geom_sf(data = subPanel, aes(color = number), size = .05) +
scale_color_manual(values = c('grey90', color3, '#8AB8E2', '#FAB2AA', color2),
name = '')+
coord_sf(xlim = c(4943223, 4992928), ylim = c(1772135, 1869228), expand = T) +
facet_wrap(~variable) +
labs(title = 'Trips starts and ends for one day in Oct 2021',
subtitle = '1 hour intervals: {current_frame}') +
transition_manual(hour) +
plotTheme2() +
theme(panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.text.y = element_blank())
subPanel = finalPanel %>%
filter(., week == 42 & dayOfWeek == 'Mon') %>%
dplyr::select(hour, station, starts, ends, geometry) %>%
gather(variable, value, -hour, -station, -geometry) %>%
mutate(number = case_when(value == 0 ~ '0 start/end',
value > 0 & value <= 5 ~ '1~5 starts/ends',
value > 5 & value <= 10 ~ '6~10 starts/ends',
value > 10 & value <= 25 ~ '11~25 starts/ends',
TRUE ~ '26+ starts/ends')) %>%
mutate(number = fct_relevel(number,
'0 start/end',
'1~5 starts/ends',
'6~10 starts/ends',
'11~25 starts/ends',
'26+ starts/ends')) %>%
mutate(variable = recode(variable, 'starts' = 'Starts', 'ends' = 'Ends')) %>%
mutate(variable = factor(variable,
levels = c('Starts', 'Ends')))
animation =
ggplot() +
geom_sf(data = nyBoundaries,
color = 'grey', fill = 'grey90', size = .03) +
geom_sf(data = subPanel, aes(color = number), size = .05) +
scale_color_manual(values = c('grey90', color3, '#8AB8E2', '#FAB2AA', color2),
name = '')+
coord_sf(xlim = c(4943223, 4992928), ylim = c(1772135, 1869228), expand = T) +
facet_wrap(~variable) +
labs(title = 'Trips starts and ends for one day in Oct 2021',
subtitle = '1 hour intervals: {current_frame}') +
transition_manual(hour) +
plotTheme2() +
theme(panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.text.y = element_blank())
anim_save('animationBike', animation, duration = 10, renderer = gifski_renderer())
knitr::include_graphics("bikeAnimation.gif")
